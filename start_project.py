#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.
"""

import os
import subprocess
import time
import sys

def set_environment():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    env_vars = {
        'POSTGRES_HOST': 'postgres',
        'POSTGRES_PORT': '5432',
        'POSTGRES_USER': 'stepa',
        'POSTGRES_PASSWORD': 'stepaxvii',
        'POSTGRES_DB': 'postgres',
        'POSTGRES_DATA': '/var/lib/postgresql/data',
        'REDIS_HOST': 'redis',
        'REDIS_PORT': '6379',
        'REDIS_PASSWORD': 'redis_password_here',
        'REDIS_DATA': '/data',
        'SERVER_PORT': '8000',
        'ADMIN_PORT': '9000',
        'TELEGRAM_BOT_TOKEN': '7622633582:AAFZwE9GfzhONup4jlNNTMkzrkvYAvaoHNM',
        'TELEGRAM_WEBHOOK_URL': 'https://your-domain.com/webhook',
        'LOG_LEVEL': 'INFO'
    }
    
    for key, value in env_vars.items():
        os.environ[key] = value
    
    print("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫."""
    print(f"\n{description}:")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {result.stdout}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e.stderr}")
        return False
    except FileNotFoundError:
        print(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {cmd[0]}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("=== –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ ===")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    set_environment()
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    if not run_command(["docker-compose", "down", "-v"], "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"):
        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    
    # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
    if not run_command(["docker-compose", "build"], "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤"):
        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    if not run_command(["docker-compose", "up", "-d"], "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã")
        sys.exit(1)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL
    print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL...")
    time.sleep(15)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if not run_command(["docker-compose", "ps"], "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        sys.exit(1)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    print("\nüîÑ –°–±—Ä–æ—Å –º–∏–≥—Ä–∞—Ü–∏–π...")
    migration_commands = [
        (["docker-compose", "exec", "-T", "postgres", "psql", "-U", "stepa", "-d", "postgres", "-c", "DROP TABLE IF EXISTS alembic_version;"], "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã alembic_version"),
        (["docker-compose", "exec", "-T", "postgres", "psql", "-U", "stepa", "-d", "postgres", "-c", "CREATE TABLE alembic_version (version_num VARCHAR(32) NOT NULL);"], "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã alembic_version"),
        (["docker-compose", "exec", "-T", "postgres", "psql", "-U", "stepa", "-d", "postgres", "-c", "INSERT INTO alembic_version (version_num) VALUES ('002');"], "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–≤–∏–∑–∏–∏ 002"),
    ]
    
    for cmd, desc in migration_commands:
        if not run_command(cmd, desc):
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ {desc}")
            continue
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    if not run_command(["docker-compose", "exec", "admin", "alembic", "upgrade", "head"], "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"):
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:")
    run_command(["docker-compose", "exec", "postgres", "psql", "-U", "stepa", "-d", "postgres", "-c", "\\dt"], "–°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü")
    run_command(["docker-compose", "exec", "postgres", "psql", "-U", "stepa", "-d", "postgres", "-c", "SELECT * FROM alembic_version;"], "–¢–µ–∫—É—â–∞—è —Ä–µ–≤–∏–∑–∏—è")
    
    print("\n‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    print("üìä –õ–æ–≥–∏: docker-compose logs -f")
    print("üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:9000")

if __name__ == "__main__":
    main() 